@use "sass:maps";

@mixin bouton($theme, $couleurs-normales) {
    cursor: pointer;

    svg {
        min-width: 30px;
        min-height: 30px;
    }

    @if ($couleurs-normales) {
        background-color: map-get($theme, "bordure");
        border: 2px solid map-get($theme, "fond");

        svg, p, h1, h2, h3, h4, h5, h6 {
            color: map-get($theme, "fond");
        }
    
        &:hover {
            background-color: map-get($theme, "hover");
    
            svg, p, h1, h2, h3, h4, h5, h6 {
                @include elargir(.25s, 1.5, false);
            }
        }
    }

    @else {
        background-color: map-get($theme, "fond");
        border: 2px solid map-get($theme, "bordure");

        & > * {
            color: map-get($theme, "icone");
        }

        &:hover {
            background-color: map-get($theme, "icone");
            
            & > * {
                color: map-get($theme, "fond");
            }
        }
    }
}

@mixin bouton--rond($theme, $marge) {
    @include bouton($theme, false);

    border-radius: 10px;
    
    margin: $marge;
}

@mixin bouton--texte($theme, $taille-texte, $pleine-largeur) {
    @include bouton($theme, true);

    border-radius: 10px;
    padding: 1em;
    border: none;
    text-transform: uppercase;
    font-weight: bold;
    font-size: $taille-texte;

    @if ($pleine-largeur) {
        display: block;
        width: 100%;
        gap: 20px;
    }
}

@mixin bouton--pleine-largeur($theme, $taille-texte) {
    @include bouton($theme, true);

    padding: 1em;
    border: none;
    text-transform: uppercase;
    font-weight: bold;
    font-size: $taille-texte;

}

@mixin burger (
	$position-haut,
	$position-gauche,
	$position-bas,
	$position-droite,

	$theme
) {
	cursor: pointer;
	position: fixed;
	z-index: 100;
	top: $position-haut;
	left: $position-gauche;
	bottom: $position-bas;
	right: $position-droite;

	padding: 10px;
	border-radius: 50%;
    
    &:focus,
    &:active,
    &:hover {
        animation: brasser 1s infinite;
    }

    @include bouton--rond($theme, 0);
}

@mixin changer-icone() {
    & + .burger__etiquette {
        .burger__etiquette--ouvert {
            display: none;
        }
        .burger__etiquette--ferme {
            display: block;
        }
    }

    &:checked + .burger__etiquette {
        .burger__etiquette--ouvert {
            display: block;
        }
        .burger__etiquette--ferme {
            display: none;
        }
    }
}

input[type="checkbox"].burger__checkbox {
    display: none;
}
